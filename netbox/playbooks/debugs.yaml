---
# Examples how to use:
# ansible-playbook playbooks/debug.yaml 

- name: Debuging ansible
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Include extra variables
      tags: 
        - dictionary
        - items
        - select
        - range
        - add_range
      include_vars:
        file: ../data/yaml/aruba_stack.yaml

    - name: Print the dictionary
      tags: dictionary
      debug:
        msg: "{{ device_interfaces }}"

    - name: Items in the dictionary
      tags: items
      debug:
        msg: "{{ item }}"
      loop: "{{ device_interfaces }}"

    - name: Print interfaces range
      tags: range
      debug:
        msg: "{{ range(1, item.nr_of_interfaces + 1) | list}}"
      loop: "{{ device_interfaces }}"

    - name: Select elements from a list of dicts with 'map'
      tags: select
      debug:
        msg: "{{ device_interfaces | map(attribute='name') }}"

    - name: Add interfaces from range
      tags: add_range
      debug:
        msg: "{{ range(1, item.nr_of_interfaces + 1) | list | lists_mergeby(device_interfaces) }}"
      loop: "{{ device_interfaces }}"

    - name: Regex in Ansible include yaml vars file
      tags: regex
      include_vars:
        file: ../data/yaml/aruba_stack_2930.yaml

    - name: Regex in Ansible
      tags: regex
      debug: 
        msg: "{{ item.name + '-1' | regex_replace('0') }}" 
      loop: "{{ chassis }}"

    - name: Include vars for Chassis
      tags: 
        - chassis
        - list
      include_vars:
        file: ../data/yaml/aruba_6300.yaml
        #file: ../data/yaml/aruba_6100.yaml

    - name: Display chassis vars
      tags: chassis
      vars:
        data:
          name: "{{ item.name }}"
          site: "{{ item.site }}"
          device_type: "{{ item.device_type }}" 
          device_role: "{{ item.device_role }}"
          serial: "{{ item.serial }}"
          tags: "{{ item.tags }}"
          tenant: netzadmin
          virtual_chassis: "{{ item.name[:-2] }}"
          vc_position: "{{ item.name[-1:] }}"
          vc_priority: "{{ '256' if item.name[-1:] == '1' else '128' }}"
      debug:
        msg: "{{ data }}"
      loop: "{{ devices }}"
      when: "{{ chassis }}"
      when: "{{ item.name[-1:] != '1' }}"

    - name: Empty list
      tags: list
      debug:
        msg: "{{ 'yes' if chassis else 'no' }}"