---
# Examples how to use:
# ansible-playbook playbooks/hp_switches.yaml --tags procurve_modular,production,switches
# ansible-playbook playbooks/hp_switches.yaml --tags procurve_modular,production,modules
#
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,switches
#
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,trunks
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,interfaces
#
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,create_vlans
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,untagged_vlans
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,tagged_vlans
# ansible-playbook playbooks/hp_switches.yaml --tags hpe_8,development,ip


- name: Add HP Switches from configuration files
  hosts: localhost
  gather_facts: false
  vars: 
    netbox_url: "https://{{ netbox_server }}"
  tasks:
    - name: Include data for ProCurve modular switches 
      tags: procurve_modular
      include_vars:
        file: ../data/yaml/procurve_modular.yaml

    - name: Include data for Aruba modular switches 
      tags: aruba_modular
      include_vars:
        file: ../data/yaml/aruba_modular.yaml

    - name: Include data for ProCurve single switches
      tags: procurve_single
      include_vars:
        file: ../data/yaml/procurve_single.yaml

    - name: Include data for 8 Ports old HP and ProCurve switches
      tags: hpe_8
      include_vars:
        file: ../data/yaml/hpe_8_ports.yaml

    - name: Include data for 24 and 48 Ports old HP switches
      tags: hpe_48
      include_vars:
        file: ../data/yaml/hpe_48_ports.yaml

    - name: Include data for 24 and 48 Ports Aruba switches
      tags: aruba_48
      include_vars:
        file: ../data/yaml/aruba_48_ports.yaml

    - name: Include data for 12 Ports Aruba switches
      tags: aruba_12
      include_vars:
        file: ../data/yaml/aruba_12_ports.yaml

    - name: Include data for 8 Ports Aruba switches
      tags: aruba_8
      include_vars:
        file: ../data/yaml/aruba_8_ports.yaml

    - name: Include development server variables
      tags: development
      include_vars:
        file: ../data/src/development_server.yaml

    - name: Include production server variables
      tags: production
      include_vars:
        file: ../data/src/production_server.yaml

    - name: Add switches
      tags: switches
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          name: "{{ item.name }}"
          site: "{{ item.site }}"
          device_type: "{{ item.device_type }}" 
          device_role: "{{ item.device_role }}"
          serial: "{{ item.serial }}"
          tags: "{{ item.tags }}"
          tenant: netzadmin
        state: present
        #state: absent
      loop: "{{ devices }}"

    - name: Delete module bays
      tags:
        - delete_bays
        - modules
      netbox.netbox.netbox_module_bay:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.device }}"
          name: "{{ item.module_bay }}"
          position: "{{ item.module_bay }}"
        state: absent
      loop: "{{ modules }}"
      when: "{{ modular }}"

    - name: Create module bays
      tags:
        - create_bays
        - modules
      netbox.netbox.netbox_module_bay:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.device }}"
          name: "{{ item.device }}-{{ item.module_bay }}"
          position: "{{ item.module_bay }}"
        state: present
      loop: "{{ modules }}"
      when: "{{ modular }}"

    - name: Add modules
      tags:
        - add_modules
        - modules
      netbox.netbox.netbox_module:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.device }}"
          module_bay: "{{ item.device }}-{{ item.module_bay }}"
          module_type: "{{ item.type }}"
          status: active
        state: present
      loop: "{{ modules }}"
      when: "{{ modular }}"

    - name: Create Trunk interfaces as LAG
      tags:
        - lags
        - trunks
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "{{ item.name }}"
          type: Link Aggregation Group (LAG)
        state: present
        #state: absent
      loop: "{{ trunks }}"

    - name: Assign interfaces to Trunks
      tags:
        - trunk_interfaces
        - trunks
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "{{ item.interface }}"
          lag:
            name: "{{ item.trunk_name }}"
        state: present
        #state: absent
      loop: "{{ trunk_interfaces }}"

    - name: Update interfaces description (here name)
      tags:
        - interfaces
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "{{ item.interface }}"
          description: "{{ item.name }}"
        state: present
      loop: "{{ interface_names }}"

    - name: Create VLANs
      tags:
        - create_vlans
        - vlans
      netbox.netbox.netbox_vlan:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          name: "{{ item.name }}"
          vid: "{{ item.id }}"
        state: present
      loop: "{{ vlans }}"
    
    - name: Assign untagged vlans to interfaces
      tags:
        - untagged_vlans
        - vlans
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "{{ item.interface }}"
          mode: Access
          untagged_vlan: 
            vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
      loop: "{{ untagged_vlans }}"

    - name: Assign tagged vlans to interfaces
      tags: 
        - tagged_vlans
        - vlans
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "{{ item.interface }}"
          mode: Tagged
          tagged_vlans: "{{ item.tagged_vlans }}"
      loop: "{{ tagged_vlans }}"

    - name: Create VLAN interfaces for loopback IPs
      tags:
        - loopback
        - vlans
        - ip
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          device: "{{ item.hostname }}"
          name: "vlan {{ item.vlan_id }}"
          type: Virtual
          description: "{{ item.vlan_name }}"
        state: present
      loop: "{{ ip_addresses }}"

    - name: Assign IP to VLAN interfaces
      tags:
        - assign_ip
        - vlans
        - ip
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          address: "{{ item.ip }}"
          dns_name: "{{ item.hostname }}"
          description: "VLAN {{ item.vlan_id }} ({{ item.vlan_name }})"
          assigned_object:
            device: "{{item.hostname }}"
            name: "vlan {{ item.vlan_id }}"
          role: Loopback
          tenant: netzadmin
        state: present
      loop: "{{ ip_addresses }}"

    - name: Assign IP addresses to devices
      tags:
        - ip_to_devices
        - ip
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          name: "{{ item.hostname }}"
          primary_ip4: "{{ item.ip }}"
        state: present
      loop: "{{ ip_addresses }}"