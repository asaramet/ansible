---
# Debian server full system update & cleanup
#
# Constants:
# 
# hosts:
#  - 'debian12-ansible' - local VM
#  - 'hs-netbox' - production server (HE)
#

- name: Full system update and cleanup
  #hosts: debian12-ansible
  hosts: hs_netbox 
  gather_facts: false
  tags: global
  become: true
  tasks:
    - name: Update APT package cache 
      ansible.builtin.apt:
        update_cache: yes

    - name: Update all packages 
      ansible.builtin.apt:
        upgrade: dist

    - name: Install packages and dependencies for NetBox
      ansible.builtin.apt: 
        pkg: "{{ item }}"
        state: latest
        update_cache: true
      loop:
        - postgresql
        - python3-psycopg2
        - redis-server
        - python3-dev 
        - python3-venv 
        #- python3-virtualenv # will be depricated and not needed in later Django module versions
        - build-essential 
        - libxml2-dev 
        - libxslt1-dev 
        - libffi-dev 
        - libpq-dev 
        - libssl-dev 
        - zlib1g-dev
    
    - name: Remove unnecessary packages
      ansible.builtin.apt:
        autoremove: true

    - name: Clean up APT cache
      ansible.builtin.apt:
        autoclean: true

    - name: Get running kernel version
      ansible.builtin.command: uname -r 
      register: running_kernel
      changed_when: false

    - name: Get latest installed kernel version
      ansible.builtin.shell: "dpkg --list | grep -E 'linux-image-[0-9]+' | awk '{print $2}' | sort -V | tail -n 1"
      register: installed_kernel
      changed_when: false

    - name: Show kernels
      debug:
        msg: "Running Kernel: linux-image-{{ running_kernel.stdout }} \nInstalled Kernel: {{ installed_kernel.stdout_lines }}"

    - name: Reboot if a new kernel is installed
      ansible.builtin.reboot:
      when: "'linux-image-' + running_kernel.stdout not in installed_kernel.stdout_lines"
...